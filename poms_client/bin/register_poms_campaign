#!/usr/bin/env python

from poms_client import register_poms_campaign,update_session_role
import optparse
import os
import sys

import logging
logging.basicConfig(level=logging.INFO)

parser = optparse.OptionParser(usage="usage: %prog [options] \n get a task id")
parser.add_option('--verbose', '-v', action='count')
parser.add_option('--campaign', help="campaign name or id", default = None)
parser.add_option('--user',     help="username", 
 default=os.environ.get('GRID_USER',os.environ.get('USER','unknown')))

parser.add_option('--experiment', help="experiment name", default = os.environment.get('EXPERIMENT',None))
parser.add_option('--version',  help="software version for campaign", default = None)
parser.add_option('--campaign-definition',  help="software version for campaign", default = None)
parser.add_option('--dataset',  help="dataset name for job", default = None)
parser.add_option('--test',  help="use test server", default = None)
parser.add_option('--test_client', dest='test', help="use test server", default = None)
parser.add_option('--poms_role', type=str, help='set role in poms', default = 'production')
parser.add_option('--dev', action='store_const', const='dev', dest='test',  metavar='',  help='use the dev/test instance of POMS')
parser.add_option('--int', action='store_const', const='int', dest='test' , metavar='',  help='use the int/integration instance of POMS')

(options, args ) = parser.parse_args()
if options.verbose:
    logging.getLogger().setLevel(logging.DEBUG)

try:
    update_session_role(options.poms_role, test_client = options.test )
    res = register_poms_campaign(campaign_name = options.campaign, 
            user = options.user,
            experiment = options.experiment,
            version = options.version,
            dataset = options.dataset,
            campaign_definition = options.campaign_definition,
            test = options.test)

    print res
except:
    logging.exception(sys.argv[0])
    sys.exit(1)
