#!/usr/bin/env python

from poms_client import get_task_id_for,update_session_role
import optparse
import os
import logging
import sys

parser = optparse.OptionParser(usage="usage: %prog [options] \n get a task id")
parser.add_option('--campaign', help="campaign name or id", default = None)
parser.add_option('--user',     help="username", default = os.environ.get('GRID_USER',os.environ.get('USER',None)))
parser.add_option('--experiment', help="experiment name", default = None)
parser.add_option('--command_executed',  help="command name for job", default = None)
parser.add_option('--input_dataset',  help="dataset name for job", default = None)
parser.add_option('--parent_task_id',  help="parent task id, if any", default = None)
parser.add_option('--task_id',  help="task_id if we are updating it not just getting it", default = None)
parser.add_option('--verbose', action='store_true', help="be verbose", default = None)
parser.add_option('--test',  help="use test server", default = None)
parser.add_option('--dev', action='store_const', const='dev', dest='test', metavar='', help='use the dev/test instance of POMS', default = False)
parser.add_option('--int', action='store_const', const='int', dest='test', metavar='', help='use the int/integration instance of POMS')
parser.add_option('--poms_role', type=str, help='use to test the client URL query', default='production')

(options, args ) = parser.parse_args()

if options.verbose:
    logging.getLogger().setLevel(logging.DEBUG)

try:
    update_session_role(options.poms_role, test_client = options.test)
    res = get_task_id_for(campaign = options.campaign, 
            user = options.user,
            experiment = options.experiment,
            command_executed = options.command_executed,
            input_dataset = options.input_dataset,
            parent_task_id = options.parent_task_id,
            task_id = options.task_id,
            test = options.test)

    print(res)
except:
    logging.exception(sys.argv[0])
    sys.exit(1)
