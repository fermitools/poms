#!/usr/bin/python

import optparse
import logging
import sys
import os
import time
from poms_client import update_submission
from samweb_client import SAMWebClient

logging.basicConfig(level=logging.INFO)


parser = optparse.OptionParser(usage="usage: %prog [options] \n mark submission as awaiting approval")
parser.add_option('--submission_id', help="submission id", default = os.environ['POMS4_SUBMISSION_ID'])
parser.add_option('--experiment', help="experiment name", default = os.environ.get('EXPERIMENT',None))
parser.add_option('--verbose', '-v', action='store_true', default = None)
parser.add_option('--dataset', help="dataset to propagate for dependencies", default = None)
parser.add_option('--test',  help="use test server", default = None)
parser.add_option('--poms_role', type=str, help='use to test the client URL query', default = 'production')
parser.add_option('--dev', action='store_const', const='dev', dest='test_client' , metavar='',  help='use the dev/test instance of POMS')
parser.add_option('--int', action='store_const', const='int', dest='test_client' , metavar='',  help='use the int/integration instance of POMS')


(options, args ) = parser.parse_args()
if options.verbose:
    logging.getLogger().setLevel(logging.DEBUG)


if options.dataset:
       # make dependency datasets that match our input dataset
       samweb = SAMWebClient(experiment=options.experiment, cert=os.environ['X509_USER_PROXY'])
       dims = 'defname:%s' % options.dataset
       for i in range(5):
           name = "poms_depends_%s_%d" %( options.submission_id, i)
           samweb.createDefinition(name, dims)

update_submission(options.submission_id,'Awaiting Approval', jobsub_job_id = "%d@fakebatch.fnal.gov"%time.time(), test=options.test_client)
