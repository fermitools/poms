#!/usr/bin/env python

import sys
import poms_client
import optparse
import logging
import os

parser = optparse.OptionParser(usage="usage: %prog [options] \n upload ini file to POMS")
parser.add_option('--poms_role', type=str, help='use to test the client URL query', default='analysis')
parser.add_option('--experiment', help="experiment name", default = os.environ.get('EXPERIMENT',None))
parser.add_option('--test',  help="use test server", default = None)
parser.add_option('--dev', action='store_const', const='dev', dest='test', metavar='', help='use the dev/test instance of POMS', default = False)
parser.add_option('--int', action='store_const', const='int', dest='test', metavar='', help='use the int/integration instance of POMS')
parser.add_option('--verbose', action='store_true', help="be verbose", default = None)
(options, args ) = parser.parse_args()

if options.verbose:
    logging.getLogger().setLevel(logging.DEBUG)

try:
    poms_client.update_session_experiment(options.experiment, test_client=options.test)
    poms_client.update_session_role(options.poms_role, test_client=options.test)

    for f in args:
         logging.debug("uploading: %s " % f)
         ok, data = poms_client.upload_wf(f, test=options.test)
         logging.debug("got data: %s" % repr(data))
         if data.has_key('message'):
             for m in data['message']:
                 print( m )
except:
    logging.exception(sys.argv[0])
    sys.exit(1)

sys.exit(0 if ok else 1)
