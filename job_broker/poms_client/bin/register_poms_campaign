#!/usr/bin/env python

from poms_client import register_poms_campaign,update_session_role
import optparse
import os

import logging
logging.basicConfig(level=logging.INFO)

parser = optparse.OptionParser(usage="usage: %prog [options] \n get a task id")
parser.add_option('--verbose', '-v', action='count')
parser.add_option('--campaign', help="campaign name or id", default = None)
parser.add_option('--user',     help="username", 
 default=os.environ.get('GRID_USER',os.environ.get('USER','unknown')))

parser.add_option('--experiment', help="experiment name", default = None)
parser.add_option('--version',  help="software version for campaign", default = None)
parser.add_option('--campaign-definition',  help="software version for campaign", default = None)
parser.add_option('--dataset',  help="dataset name for job", default = None)
parser.add_option('--test',  help="use test server", default = None)
parser.add_option('--poms_role', type=str, help='set role in poms', default = 'production')

(options, args ) = parser.parse_args()
if options.verbose:
    logging.getLogger().setLevel(logging.DEBUG)

update_session_role(options.poms_role)
res = register_poms_campaign(campaign_name = options.campaign, 
	user = options.user,
	experiment = options.experiment,
	version = options.version,
	dataset = options.dataset,
	campaign_definition = options.campaign_definition,
	test = options.test)

print res
