#!/usr/bin/env python

from poms_client import get_task_id_for
import optparse
import os

parser = optparse.OptionParser(usage="usage: %prog [options] \n get a task id")
parser.add_option('--campaign', help="campaign name or id", default = None)
parser.add_option('--user',     help="username", default = os.environ.get('GRID_USER',os.environ.get('USER',None)))
parser.add_option('--experiment', help="experiment name", default = None)
parser.add_option('--command_executed',  help="command name for job", default = None)
parser.add_option('--input_dataset',  help="dataset name for job", default = None)
parser.add_option('--parent_task_id',  help="parent task id, if any", default = None)
parser.add_option('--task_id',  help="task_id if we are updating it not just getting it", default = None)
parser.add_option('--test',  help="dataset name for job", default = None)
parser.add_argument('--poms_role', type=str, help='use to test the client URL query', default = 'production')

(options, args ) = parser.parse_args()

poms_client.update_session_role(args.poms_role)
res = get_task_id_for(campaign = options.campaign, 
	user = options.user,
	experiment = options.experiment,
	command_executed = options.command_executed,
	input_dataset = options.input_dataset,
	parent_task_id = options.parent_task_id,
        task_id = options.task_id,
	test = options.test)

print(res)
